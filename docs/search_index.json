[["index.html", "Workshop Materials", " Workshop Materials In the following link, you will find the R routines developed for the workshop.. Descargar "],["installation-of-libraries-and-required-software-for-bayesian-area-models..html", "Capítulo 1 Installation of Libraries and Required Software for Bayesian Area Models. ", " Capítulo 1 Installation of Libraries and Required Software for Bayesian Area Models. "],["step-1-installing-software.html", "1.1 Step 1: Installing Software", " 1.1 Step 1: Installing Software Below is a list of the necessary software for the proper development of the training. It is recommended to install these packages before starting with the practical development. Download and install Rbase (https://cran.r-project.org/bin/windows/base/) Download and install Rtools (https://cran.r-project.org/bin/windows/Rtools/) Download and install Rstudio (https://posit.co/download/rstudio-desktop/) Download and install Quarto (https://quarto.org/docs/get-started/) Download and install Anaconda (https://www.anaconda.com/products/individual) Download and install Google Cloud (https://cloud.google.com/sdk/docs/install?hl=es-419) "],["step-2-installing-the-following-libraries-in-r..html", "1.2 Step 2: Installing the following libraries in R.", " 1.2 Step 2: Installing the following libraries in R. 1.2.1 Data Visualization and Manipulation: tidyverse: A collection of packages for data manipulation and visualization. magrittr: Provides a pipe %&gt;% operator to make code more readable. scales: Tools for scaling visualizations, like adjusting axis breaks. sf: For working with spatial data and maps. tmap: Creates thematic maps and overlays. 1.2.2 Statistical Modeling: lme4: Fits linear and generalized linear mixed-effects models. rstanarm: Fits Bayesian models using Stan for various statistical tasks. 1.2.3 Survey Analysis: srvyr: Tools for working with survey data alongside the dplyr package. survey: For analyzing complex survey data. 1.2.4 Data Manipulation and Transformation: dplyr: Data manipulation tools. tidyr: Tools for reshaping and tidying data. reshape2: Reshaping data frames. 1.2.5 Bayesian Analysis: bayesplot: Visualization of Bayesian models. posterior: Tools for working with posterior distributions. rstan: R interface to Stan, a platform for Bayesian modeling. 1.2.6 Geospatial Analysis: rgee: Interface to Google Earth Engine. trafo: Tools for transforming spatial data. maptools: Tools for reading and manipulating geographic data. usmap: Maps of the United States. 1.2.7 Miscellaneous: sampling: Tools for survey sampling. haven: For reading and writing SPSS, Stata, and SAS files. RColorBrewer: Provides color palettes. kableExtra: Enhances table rendering in R Markdown. formatR: Formatting tools for R code. printr: Custom printing of data frames and tables. remotes: Tools for package development and installation. latex2exp: Converts LaTeX code into expressions. To install each package, use the command install.packages(\"package_name\"). install.packages(&quot;patchwork&quot;) install.packages(&quot;lme4&quot;) install.packages(&quot;tidyverse&quot;) install.packages(&quot;rstanarm&quot;) install.packages(&quot;magrittr&quot;) install.packages(&quot;reticulate&quot;) install.packages(&quot;rgee&quot;) install.packages(&quot;sf&quot;) install.packages(&quot;tmap&quot;) install.packages(&quot;trafo&quot;) install.packages(&quot;scales&quot;) install.packages(&quot;srvyr&quot;) install.packages(&quot;survey&quot;) install.packages(&quot;haven&quot;) install.packages(&quot;sampling&quot;) install.packages(&quot;RColorBrewer&quot;) install.packages(&quot;maptools&quot;) install.packages(&quot;data.table&quot;) install.packages(&quot;forcats&quot;) install.packages(&quot;tidyr&quot;) install.packages(&quot;reshape2&quot;) install.packages(&quot;bayesplot&quot;) install.packages(&quot;posterior&quot;) install.packages(&quot;gridExtra&quot;) install.packages(&quot;ggalt&quot;) install.packages(&quot;usmap&quot;) install.packages(&quot;kableExtra&quot;) install.packages(&quot;formatR&quot;) install.packages(&quot;printr&quot;) install.packages(&quot;remotes&quot;) install.packages(&quot;latex2exp&quot;) install.packages(&quot;gtsummary&quot;) "],["step-by-step-guide-to-install-rstan.html", "1.3 Step-by-Step Guide to Install rstan", " 1.3 Step-by-Step Guide to Install rstan Follow these steps to install the rstan package: Install Rtools (if using Windows): Download and install Rtools. Install StanHeaders: Open R or RStudio. Run the command: install.packages(\"StanHeaders\", repos = c(\"https://mc-stan.org/r-packages/\", getOption(\"repos\"))). Install rstan: Run the command: install.packages(\"rstan\", repos=c(\"https://mc-stan.org/r-packages/\", getOption(\"repos\"))). Verify the installation: Load the package using: library(rstan). Validate the installation: Run a simple model to ensure that rstan is working properly. You can use the example code provided in the documentation. Remember to follow these steps carefully to ensure a successful installation of rstan and its dependencies. "],["step-3-validation-of-installation---ensuring-proper-rstan-installation.html", "1.4 Step 3: Validation of Installation - Ensuring Proper rstan Installation", " 1.4 Step 3: Validation of Installation - Ensuring Proper rstan Installation library(rstan) library(posterior) library(bayesplot) # Example Stan code stan_code &lt;- &quot; parameters { real y[2]; } model { y[1] ~ normal(0, 1); y[2] ~ double_exponential(0, 2); } &quot; # Fit the model fit1 &lt;- stan(model_code = stan_code, iter = 10, verbose = FALSE) # Print the fit1 object print(fit1) # Further fitting and summarizing fit2 &lt;- stan(fit = fit1, iter = 10000, verbose = FALSE) summary(fit2)$summary In this section, we validate the correct installation of rstan by running a simple Bayesian model. We load the required packages, including rstan, posterior, and bayesplot. We then define a basic Stan model using the Stan code provided. We fit this model using stan() with a small number of iterations (iter = 10) to quickly verify the installation. Next, we demonstrate fitting the model further (fit2) with more iterations (iter = 10000) to show how to perform a more comprehensive analysis. The summary of the fitted model is printed using the summary() function. Make sure to evaluate this code in an R environment after installing the required packages to verify that rstan has been installed correctly and is functioning as expected. "],["step-4-creating-a-google-earth-engine-account.html", "1.5 Step 4: Creating a Google Earth Engine Account:", " 1.5 Step 4: Creating a Google Earth Engine Account: https://developers.google.com/earth-engine/datasets/ After successfully creating your account, it’s important to follow these steps to ensure everything is set up correctly: Access the provided link: https://developers.google.com/earth-engine/datasets/catalog/WHRC_biomass_tropical. Scroll down to the bottom of the page and locate the code displayed in the image below: Click on the Open in Code Editor option, which will open a new browser tab. Follow the instructions provided until you achieve the result shown in the image below: In the previous tab, find and click the Run button to obtain the outcome displayed in the image below: Note: Repeat the process as needed to ensure you achieve the desired outcome. "]]
