---
title: "Installation of Libraries and Required Software for Bayesian Area Models."
subtitle: "ECLAC - Social Statistics Unit"
author: "Andrés Gutiérrez - Stalyn Guerrero"
format: pdf
---

```{r setup, include=FALSE, message=FALSE, error=FALSE, warning=FALSE}
knitr::opts_chunk$set(echo = TRUE, 
                      message = FALSE,
                      warning = FALSE,
                      cache = TRUE)

```

## Step 1: Installing Software

Below is a list of the necessary software for the proper development of the training. It is recommended to install these packages before starting with the practical development.

1. Download and install **Rbase** (<https://cran.r-project.org/bin/windows/base/>)
2. Download and install **Rtools** (<https://cran.r-project.org/bin/windows/Rtools/>)
3. Download and install **Rstudio** (<https://posit.co/download/rstudio-desktop/>)
4. Download and install **Quarto** (<https://quarto.org/docs/get-started/>)
5. Download and install **Anaconda** (<https://www.anaconda.com/products/individual>)
6. Download and install **Google Cloud** (<https://cloud.google.com/sdk/docs/install?hl=es-419>)


## Step 2: Installing the following libraries in *R.*

### Data Visualization and Manipulation:
- **tidyverse**: A collection of packages for data manipulation and visualization.
- **magrittr**: Provides a pipe `%>%` operator to make code more readable.
- **scales**: Tools for scaling visualizations, like adjusting axis breaks.
- **sf**: For working with spatial data and maps.
- **tmap**: Creates thematic maps and overlays.

### Statistical Modeling:
- **lme4**: Fits linear and generalized linear mixed-effects models.
- **rstanarm**: Fits Bayesian models using Stan for various statistical tasks.

### Survey Analysis:
- **srvyr**: Tools for working with survey data alongside the `dplyr` package.
- **survey**: For analyzing complex survey data.

### Data Manipulation and Transformation:
- **dplyr**: Data manipulation tools.
- **tidyr**: Tools for reshaping and tidying data.
- **reshape2**: Reshaping data frames.

### Bayesian Analysis:
- **bayesplot**: Visualization of Bayesian models.
- **posterior**: Tools for working with posterior distributions.
- **rstan**: R interface to Stan, a platform for Bayesian modeling.

### Geospatial Analysis:
- **rgee**: Interface to Google Earth Engine.
- **trafo**: Tools for transforming spatial data.
- **maptools**: Tools for reading and manipulating geographic data.
- **usmap**: Maps of the United States.

### Miscellaneous:
- **sampling**: Tools for survey sampling.
- **haven**: For reading and writing SPSS, Stata, and SAS files.
- **RColorBrewer**: Provides color palettes.
- **kableExtra**: Enhances table rendering in R Markdown.
- **formatR**: Formatting tools for R code.
- **printr**: Custom printing of data frames and tables.
- **remotes**: Tools for package development and installation.
- **latex2exp**: Converts LaTeX code into expressions.

To install each package, use the command `install.packages("package_name")`.

```{r, eval=FALSE}
install.packages("patchwork")
install.packages("lme4")
install.packages("tidyverse")
install.packages("rstanarm")
install.packages("magrittr")
install.packages("reticulate") 
install.packages("rgee") 
install.packages("sf")
install.packages("tmap")
install.packages("trafo")
install.packages("scales")
install.packages("srvyr")
install.packages("survey")
install.packages("haven")
install.packages("sampling")
install.packages("RColorBrewer")
install.packages("maptools")
install.packages("data.table")
install.packages("forcats")
install.packages("tidyr")
install.packages("reshape2")
install.packages("bayesplot")
install.packages("posterior")
install.packages("gridExtra")
install.packages("ggalt")
install.packages("usmap")
install.packages("kableExtra")
install.packages("formatR")
install.packages("printr")
install.packages("remotes")
install.packages("latex2exp")
install.packages("gtsummary")
install.packages("rstan", repos=c("https://mc-stan.org/r-packages/", getOption("repos")))
```

## Step 3: Validation of Installation - Ensuring Proper `rstan` Installation


```{r,eval=FALSE}
library(rstan)
library(posterior)
library(bayesplot)

# Example Stan code
stan_code <- "
parameters {
  real y[2]; 
} 
model {
  y[1] ~ normal(0, 1);
  y[2] ~ double_exponential(0, 2);
} 
"
# Fit the model
fit1 <- stan(model_code = stan_code, iter = 10, verbose = FALSE) 

# Print the fit1 object
print(fit1)

# Further fitting and summarizing
fit2 <- stan(fit = fit1, iter = 10000, verbose = FALSE) 
summary(fit2)$summary 
```

In this section, we validate the correct installation of `rstan` by running a simple Bayesian model. We load the required packages, including `rstan`, `posterior`, and `bayesplot`. We then define a basic Stan model using the Stan code provided. We fit this model using `stan()` with a small number of iterations (`iter = 10`) to quickly verify the installation.

Next, we demonstrate fitting the model further (`fit2`) with more iterations (`iter = 10000`) to show how to perform a more comprehensive analysis. The summary of the fitted model is printed using the `summary()` function.

Make sure to evaluate this code in an R environment after installing the required packages to verify that `rstan` has been installed correctly and is functioning as expected.


## Paso 4: Crear cuenta en Google Earth Engine:  <https://developers.google.com/earth-engine/datasets/>

Después de crear la cuenta, debe realizar las siguientes acciones para validar que todo este correcto: 

  1.    Ingrese al link (<https://developers.google.com/earth-engine/datasets/catalog/WHRC_biomass_tropical>). 
  
  2.  Desplácese hasta el final de la pagina e identifique el código que se muestra en la imagen. 
```{r}
knitr::include_graphics("Validar cuenta.png")
```

  3.    De clic en **Open in Code Editor**, esto abrirá una nueva pestaña en el navegador, siga las instrucciones hasta obtener la siguiente imagen. 
  
```{r}
knitr::include_graphics("Validar cuenta2.png")
```  

  4.   En la pestaña anterior, identifique el botón **Run**, presiona para obtener la imagen. 
  
```{r}
knitr::include_graphics("Validar cuenta3.png")
```  
  
**Nota**: Repetir el proceso hasta obterner el resultado indicado.   
